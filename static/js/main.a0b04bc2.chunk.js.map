{"version":3,"sources":["api/posts.ts","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","deleteComment","commentId","fetch","method","then","response","json","PostsList","props","selectedUserId","selectedPostId","setSelectPostId","useState","posts","setPosts","useEffect","userId","postFromServer","className","map","post","title","type","onClick","id","NewCommentForm","addNewComment","name","setName","email","setEmail","body","setBody","onSubmit","event","preventDefault","postId","placeholder","value","onChange","currentTarget","PostDetails","setPost","comments","setComments","isVisible","setVisible","getPostComments","deleteCommentServer","a","filter","com","length","comment","newComment","options","headers","JSON","stringify","addComment","App","users","setUsers","setSelectedUserId","setSelectedPostId","userFromServer","target","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0b04bc2.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts`)\n    .then(response => response.json());\n};\n\nexport const getUserPosts = (userId: number) => {\n  return fetch(`${BASE_URL}/posts?userId=${userId}`)\n    .then(response => response.json());\n};\n\nexport const getUser = () => {\n  return fetch(`${BASE_URL}/users`)\n    .then(response => response.json());\n};\n\nexport const getPostDetails = (postId: number) => {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json());\n};\n\nexport const getPostComments = (postId: number) => {\n  return fetch(`${BASE_URL}/comments?postId=${postId}`)\n    .then(response => response.json());\n};\n\nexport const addComment = (newComment: Partial<Comment>) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(newComment),\n  };\n\n  return fetch(`${BASE_URL}/comments`, options)\n    .then(response => response.json());\n};\n\nexport const deleteComment = (commentId: number): Promise<Comment> => {\n  return fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' })\n    .then(response => response.json());\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPosts, getUserPosts } from '../../api/posts';\nimport './PostsList.scss';\n\ntype Props = {\n  selectedUserId: number;\n  selectedPostId: number,\n  setSelectPostId: (postId: number) => void\n};\n\nexport const PostsList: React.FC<Props> = (props) => {\n  const { selectedUserId, selectedPostId, setSelectPostId } = props;\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    if (selectedUserId === 0) {\n      getPosts()\n        .then(response => {\n          setPosts(response);\n        });\n\n      return;\n    }\n\n    getUserPosts(selectedUserId)\n      .then((postFromServer) => setPosts(postFromServer));\n  }, [selectedUserId]);\n\n  const handleChange = (id: number) => {\n    if (selectedPostId === id) {\n      setSelectPostId(0);\n    } else {\n      setSelectPostId(id);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>\n                {`[User #${post.userId}]: `}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => handleChange(post.id)}\n            >\n              {selectedPostId === post.id\n                ? 'Close'\n                : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { FormEvent, useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  selectedPostId: number;\n  addNewComment: (newComment: Partial<Comment>) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = (props) => {\n  const { selectedPostId, addNewComment } = props;\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    addNewComment({\n      postId: selectedPostId,\n      name,\n      email,\n      body,\n    });\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(event) => setName(event.currentTarget.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(event) => setEmail(event.currentTarget.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(event) => setBody(event.currentTarget.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  addComment,\n  deleteComment,\n  getPostComments,\n  getPostDetails,\n} from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number;\n};\n\nexport const PostDetails: React.FC<Props> = (props) => {\n  const { selectedPostId } = props;\n\n  const [post, setPost] = useState<Post>();\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isVisible, setVisible] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(response => setPost(response));\n\n    getPostComments(selectedPostId)\n      .then(response => setComments(response));\n  }, [selectedPostId]);\n\n  const deleteCommentServer = async (commentId: number) => {\n    deleteComment(commentId);\n    setComments(comments.filter(com => com.id !== commentId));\n  };\n\n  const addNewComment = (newComment: Partial<Comment>) => {\n    addComment(newComment)\n      .then(response => setComments([...comments, response]));\n  };\n\n  const handleChange = () => {\n    setVisible(!isVisible);\n  };\n\n  if (!post) {\n    return <h2>No selected posts</h2>;\n  }\n\n  return (\n    <div className=\"PostDetails\">\n      {selectedPostId !== 0\n        ? (\n          <>\n            <h2>Post details:</h2>\n\n            <section className=\"PostDetails__post\">\n              <p>{post.body}</p>\n            </section>\n\n            <section className=\"PostDetails__comments\">\n              <button type=\"button\" className=\"button\" onClick={handleChange}>\n                {isVisible\n                  ? `Hide ${comments.length} comments`\n                  : `Show ${comments.length} comments`}\n              </button>\n\n              <ul className=\"PostDetails__list\">\n                {isVisible && (\n                  <>\n                    {comments.map(comment => (\n                      <li className=\"PostDetails__list-item\" key={comment.id}>\n                        <button\n                          type=\"button\"\n                          className=\"PostDetails__remove-button button\"\n                          onClick={() => deleteCommentServer(comment.id)}\n                        >\n                          X\n                        </button>\n                        <p>{comment.body}</p>\n                      </li>\n                    ))}\n                  </>\n                )}\n              </ul>\n            </section>\n\n            <section>\n              <div className=\"PostDetails__form-wrapper\">\n                <NewCommentForm\n                  selectedPostId={selectedPostId}\n                  addNewComment={addNewComment}\n                />\n              </div>\n            </section>\n          </>\n        )\n        : (\n          <h2>No selected posts yet</h2>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUser } from './api/posts';\n\nconst App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    getUser()\n      .then((userFromServer) => setUsers(userFromServer));\n  }, [selectedUserId]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n          <select\n            className=\"App__user-selector\"\n            onChange={handleChange}\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedPostId={selectedPostId}\n            selectedUserId={selectedUserId}\n            setSelectPostId={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails selectedPostId={selectedPostId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}